/*

In this file:

// A. Modules
// B. Variables
// C. Font Weight Utilities
// D. Font Size Utilities
// E. Headings
// F. Banner Headline Utility
// G. Body Selectors
// H. Text Align Utilities
// I. Text Transform Utilities
// J. Text Decoration Utilities
// K. Word Wrap Utilities
// L. Truncate Text Utility

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use 'sass:map';
@use './breakpoint';

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

// Import Open Source Fonts

@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,400;0,600;0,700;1,400;1,600;1,700&display=swap');

:root {

    // Body Font Stack

    --body-font-family: "Source Sans Pro", sans-serif;
    
    --body-font-weight-normal: 400;
    --body-font-weight-medium: 600;
    --body-font-weight-bold: 700;

    --body-font-size: 20px;

    --body-line-height: 1.5;

    // Font Sizes

    --font-size-sm: calc(var(--body-font-size) * 0.75);  // ~ 16.5px
    --font-size-md: calc(var(--body-font-size) * 0.825);  // ~ 18px
    --font-size-rg: calc(var(--body-font-size) * 1);    // = 22px
    --font-size-lg: calc(var(--body-font-size) * 1.375);  // ~ 26px
    --font-size-xl: calc(var(--body-font-size) * 1.75);  // ~ 30px

    // Headers

    --h1-font-size: calc(var(--body-font-size) * 2.5);    // ~ 60px
    --h2-font-size: calc(var(--body-font-size) * 2);  // ~ 48px
    --h3-font-size: calc(var(--body-font-size) * 1.6);  // ~ 40px
    --h4-font-size: calc(var(--body-font-size) * 1.4);  // ~ 35px
    --h5-font-size: calc(var(--body-font-size) * 1.2);  // ~ 30px
    --h6-font-size: calc(var(--body-font-size) * 1);  // ~ 26px

    --header-line-height: 1.125;

    --header-margin-bottom: 0.375em;

    // Banner Headline

    --banner-headline-font-size-sm: calc(var(--body-font-size) * 2.75);
    --banner-headline-font-size-lg: calc(var(--body-font-size) * 4);
    --banner-headline-font-weight: var(--body-font-weight-normal);

    // Paragraph

    --paragraph-margin-bottom: 1.25em;
}

//////////////////////////////////////////////
// C. Base Selectors
//////////////////////////////////////////////

@layer base {

    body {
        font-family: var(--body-font-family);

        font-size: var(--body-font-size);
        
        font-weight: var(--body-font-weight-normal);
        
        line-height: var(--body-line-height);
    }

    p, 
    p ~ ul:not([class]),
    p ~ ol:not([class]) {
        &:not(:last-child){
            margin-block-end: var(--paragraph-margin-bottom);
        }
    }

    :is(
        p ~ ul:not([class]),
        p ~ ol:not([class]) 
    ) li {
        margin-block-end: var(--spacer-1);
    }

    p ~ ul:not([class]) {
        --list-item-padding: 1em;

        li {
            margin-inline-start: var(--list-item-padding);
        }
    }

    ol:not([class]) {
        --list-item-padding: 2em;

        list-style: none;

        counter-reset: list-item-counter;
    
        li {
            position: relative;
            
            padding-inline-start: var(--list-item-padding);

            counter-increment: list-item-counter;
        }

        li::before {
            position: absolute;
            inset-inline-start: 0;

            content: counters(list-item-counter, ".") ". ";
        }

    }

    figure {
        figcaption {
            font-size: var(--font-size-sm);
            opacity: 0.85;
            margin-block-start: var(--spacer-2);
        }
    }

    blockquote {
        margin-block-end: var(--paragraph-margin-bottom);
    }

    :is(
        h1, .h1,
        h2, .h2, 
        h3, .h3,
        h4, .h4,
        h5, .h5, 
        h6, .h6 
    ) {
        font-weight: var(--body-font-weight-bold);
        line-height: var(--header-line-height);

        &:not(.accordion__button):not(.alert__title):not(:last-child){
            margin-block-end: var(--header-margin-bottom);
        }
    }
} // end @layer

//////////////////////////////////////////////
// D. Font Size and Font Weight Utilities
//////////////////////////////////////////////

@layer utility {

    // Font Size

    $font-sizes: (

        sm: (
            size: var(--font-size-sm)
        ),

        md: (
            size: var(--font-size-md)
        ),
        
        rg: (
            size: var(--font-size-rg)
        ),

        lg: (
            size: var(--font-size-lg)
        ),
        
        xl: (
            size: var(--font-size-xl)
        )
    );

    @each $breakpoint in map.keys(breakpoint.$breakpoints) {
        @include breakpoint.breakpoint-up($breakpoint) {
            $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

            @each $key, $font-size-map in $font-sizes {
                .font-size-#{$key}#{$mod} {
                    font-size: map.get($font-size-map, "size");

                    @if map.has-key($font-size-map, "line-height") {
                        line-height: map.get($font-size-map, "line-height");
                    }
                }
            }
        }
    }

    // Font Weight

    $font-weights: (
        normal: var(--body-font-weight-normal),
        medium: var(--body-font-weight-medium),
        bold: var(--body-font-weight-bold),
    );

    @each $key, $value in $font-weights {
        .font-weight-#{$key} {
            font-weight: #{$value};
        }
    }
} // end @layer

//////////////////////////////////////////////
// E. Heading Sizes and Utilities
//////////////////////////////////////////////

$headers: (

    h1: (
        size: var(--h1-font-size)
    ),

    h2: (
        size: var(--h2-font-size)
    ),
    
    h3: (
        size: var(--h3-font-size)
    ),

    h4: (
        size: var(--h4-font-size)
    ),
    
    h5: (
        size: var(--h5-font-size)
    ),

    h6: (
        size: var(--h6-font-size)
    )
);

@layer base {
        
    @each $key, $header-map in $headers {

        #{$key} {
            font-size: map.get($header-map, "size");
        }
    }

} // end @layer

@layer utility {

    // h1 - h6

    @each $key, $header-map in $headers {

        .#{$key} {
            font-size: map.get($header-map, "size");
        }
    }

    // Banner Headline

    .banner-headline {
        font-weight: var(--banner-headline-font-weight);

        font-size: var(--banner-headline-font-size-sm);

        line-height: var(--header-line-height);

        @include breakpoint.breakpoint-up(lg) {
            font-size: var(--banner-headline-font-size-lg);
        }
    }

} // end @layer

//////////////////////////////////////////////
// F. Text Utilities
//////////////////////////////////////////////

@layer utility {

    @each $breakpoint in map.keys(breakpoint.$breakpoints) {
        @include breakpoint.breakpoint-up($breakpoint) {
            $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

            // Text Align

            .text-align-left#{$mod} {
                text-align: start;
            }
            
            .text-align-center#{$mod} {
                text-align: center;
            }

            .text-align-right#{$mod} {
                text-align: end;
            }

            // Text Transform

            .text-transform-capitalize#{$mod} {
                text-transform: capitalize;
            }

            .text-transform-uppercase#{$mod} {
                text-transform: uppercase;
            }

            .text-transform-lowercase#{$mod} {
                text-transform: lowercase;
            }

            // Text Decoration

            .text-decoration-underline#{$mod} {
                text-decoration: underline auto;
            }

            .text-decoration-line-through#{$mod} {
                text-decoration: line-through auto;
            }

            .text-decoration-none#{$mod} {
                text-decoration: none;
            }

            // Word Wrap

            .nowrap#{$mod} {
                white-space: nowrap;
            }

            .break-word#{$mod} {
                overflow-wrap: break-word;
            }

            // Truncate Text
            
            .truncate-text#{$mod} {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

        }
    }

} // end @layer